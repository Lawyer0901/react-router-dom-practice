{"version":3,"file":"static/js/318.394f2e64.chunk.js","mappings":"oLA4CA,UA1CkB,WAAO,IAADA,EAChBC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAUAI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAqC,QAA3BX,EAAGS,EAAaG,IAAI,eAAO,IAAAZ,EAAAA,EAAI,GACzCa,EAZU,CACd,CAAEC,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,YACjB,CAAED,GAAI,IAAKC,KAAM,aAIWC,QAAO,SAAAC,GAAM,OACzCA,EAAOF,KAAKG,cAAcC,SAASR,EAAWO,cAAc,IAQ9D,OACEE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOb,EAAYc,SARrB,SAAAC,GACnB,IAAMX,EAAOW,EAAEC,OAAOH,MAChBI,EAAsB,KAATb,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAC7CZ,QAAQC,IAAIwB,GACZlB,EAAgBkB,EAClB,KAIIN,EAAAA,EAAAA,KAAA,MAAAD,SACGR,EAAcgB,KAAI,SAAAZ,GACjB,OACEK,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKf,EAAOF,MAAQkB,MAAO,CAAEC,KAAMjC,GAAWoB,SACnDJ,EAAOF,QAFHE,EAAOH,GAMpB,QAIR,C","sources":["components/pages/ClientPage/ClienPage.jsx"],"sourcesContent":["import { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst ClienPage = () => {\n  const location = useLocation();\n  console.log(location);\n  const clients = [\n    { id: '1', name: 'client-1' },\n    { id: '2', name: 'client-2' },\n    { id: '3', name: 'client-3' },\n    { id: '4', name: 'client-4' },\n    { id: '5', name: 'client-5' },\n    { id: '6', name: 'client-6' },\n    { id: '7', name: 'client-7' },\n    { id: '8', name: 'client-8' },\n  ];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const clientName = searchParams.get('name') ?? '';\n  const visibleClient = clients.filter(client =>\n    client.name.toLowerCase().includes(clientName.toLowerCase())\n  );\n  const handleChange = e => {\n    const name = e.target.value;\n    const nextParams = name !== '' ? { name } : {};\n    console.log(nextParams);\n    setSearchParams(nextParams);\n  };\n  return (\n    <div>\n      <input type=\"text\" value={clientName} onChange={handleChange} />\n      <ul>\n        {visibleClient.map(client => {\n          return (\n            <li key={client.id}>\n              <Link to={`${client.name}`} state={{ from: location }}>\n                {client.name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ClienPage;\n"],"names":["_searchParams$get","location","useLocation","console","log","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","clientName","get","visibleClient","id","name","filter","client","toLowerCase","includes","_jsxs","children","_jsx","type","value","onChange","e","target","nextParams","map","Link","to","concat","state","from"],"sourceRoot":""}